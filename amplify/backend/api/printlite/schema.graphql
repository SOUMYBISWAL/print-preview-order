type User @model @auth(rules: [{ allow: owner }]) {
  id: ID!
  username: String! @index(name: "byUsername")
  email: AWSEmail!
  orders: [Order] @hasMany(indexName: "byUser", fields: ["id"])
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type Order @model @auth(rules: [
  { allow: owner },
  { allow: public, operations: [create, read] }
]) {
  id: ID!
  customerName: String!
  email: AWSEmail!
  phone: String!
  totalAmount: Float!
  status: OrderStatus! @default(value: "PENDING")
  totalPages: Int!
  printType: PrintType!
  paperSize: PaperSize!
  paperType: PaperType!
  sides: PrintSides!
  binding: BindingType
  copies: Int! @default(value: 1)
  deliveryAddress: String!
  paymentMethod: PaymentMethod!
  paymentStatus: PaymentStatus! @default(value: "PENDING")
  fileNames: [String]!
  fileKeys: [String] # S3 keys for uploaded files
  specialInstructions: String
  userID: ID @index(name: "byUser")
  user: User @belongsTo(fields: ["userID"])
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

enum OrderStatus {
  PENDING
  PROCESSING
  PRINTING
  SHIPPED
  DELIVERED
  CANCELLED
}

enum PrintType {
  BLACK_WHITE
  COLOR
}

enum PaperSize {
  A4
  A3
  LETTER
  LEGAL
}

enum PaperType {
  STANDARD_70GSM
  PREMIUM_90GSM
  GLOSSY_120GSM
}

enum PrintSides {
  SINGLE
  DOUBLE
}

enum BindingType {
  NONE
  SPIRAL
  STAPLE
  RING
}

enum PaymentMethod {
  UPI
  CARD
  CASH
  BANK_TRANSFER
}

enum PaymentStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  REFUNDED
}

type Query {
  listOrdersForAdmin: [Order] @auth(rules: [{ allow: groups, groups: ["Admin"] }])
  getOrderByID(id: ID!): Order @auth(rules: [{ allow: public }])
}

type Mutation {
  createGuestOrder(input: CreateOrderInput!): Order @auth(rules: [{ allow: public }])
  updateOrderStatus(id: ID!, status: OrderStatus!): Order @auth(rules: [{ allow: groups, groups: ["Admin"] }])
}

input CreateOrderInput {
  customerName: String!
  email: AWSEmail!
  phone: String!
  totalAmount: Float!
  totalPages: Int!
  printType: PrintType!
  paperSize: PaperSize!
  paperType: PaperType!
  sides: PrintSides!
  binding: BindingType
  copies: Int
  deliveryAddress: String!
  paymentMethod: PaymentMethod!
  paymentStatus: PaymentStatus
  fileNames: [String]!
  fileKeys: [String]
  specialInstructions: String
}